<!DOCTYPE html>
<html lang="ru">
<head>

  <% if action_name == 'cv_eng' %>
    <% label = 'Dmitry Arkhipov, Ruby on Rails' %>
  <% elsif action_name == 'cv_rus' %>
    <% label = 'Дмитрий Архипов, Ruby on Rails' %>
  <% elsif (action_name == 'portfolio' || action_name == 'portfolio_case') && I18n.locale == :ru %>
    <% label = 'Дмитрий Архипов, Портфолио' %>
  <% elsif (action_name == 'portfolio' || action_name == 'portfolio_case') && I18n.locale == :en %>
    <% label = 'Dmitry Arkhipov, Portfolio' %>
  <% end %>

  <title><%= label %></title>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="robots" content="index, follow">
  <meta name="description" content="Дмитрий Архипов Ruby on Rails разработчик">
  <meta name="keywords" content="dack9, разработчик, RubyOnRails, Ruby, разработчик полного стека, программист">
  <meta name="author" content="Дмитрий Архипов Dack9">

  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <%= stylesheet_pack_tag 'application', media: 'all' %>
  <%= javascript_pack_tag 'application' %>
  <%= favicon_pack_tag 'ruby.ico' %>
</head>

<body class='<%= @dark_body %>'>
  <%= yield %>
</body>

</html>

<script>
  function getLastDayOfMonth() {
    let currentDate = new Date();
    let lastDayDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0, 23, 59, 59);

    return lastDayDate;
  };

  function getUid() {
    let s = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    let out = Array(8).join().split(',').map(function() { return s.charAt(Math.floor(Math.random() * s.length)); }).join('');

    return out;
  };

  function deleteAllCookies() {
    if (localStorage.getItem('_rs_uniq_exp')) {
      let uniq_exp_date = localStorage.getItem('_rs_uniq_exp');

      if (Date.parse(uniq_exp_date) <= new Date()) {
        localStorage.removeItem('_rs_uniq_exp');
      };
    }
  };

  function requestData() {
    let InfObj = {};

    <% if request.remote_ip %>
      InfObj.ip = '<%= request.remote_ip %>';

      <% result = GeocodingService.call(ip: request.remote_ip) %>

      <% if result[:country] && result[:region] && result[:city] %>
        InfObj.country   = '<%= result[:country][:name_ru] %>';
        InfObj.region    = '<%= result[:region][:name_ru] %>';
        InfObj.city      = '<%= result[:city][:name_ru] %>';
        InfObj.city_lat  = '<%= result[:city][:lat] %>';
        InfObj.city_long = '<%= result[:city][:lon] %>';
      <% end %>
    <% end %>

    return InfObj;
  };

  function processResponse(InfObj) {
    let visitor;

    if (!localStorage.getItem('_rs_visitor')) {
      if (!localStorage.getItem('_rs_uniq_exp')) {
        localStorage.setItem('_rs_uniq_exp', getLastDayOfMonth());
      }

      let uid = getUid();

      localStorage.setItem('_rs_visitor', uid);

      visitor = { 'uniq_visitor': true };

      visitor['visitor_data'] = shapeData(InfObj, true);

      visitor['visitor_data']['u_id'] = uid;
    }
    else if (localStorage.getItem('_rs_visitor')) {
      let existed_uid = localStorage.getItem('_rs_visitor');

      visitor = { 'repeat_visitor': true };

      visitor['visitor_data'] = shapeData(false, false);
      visitor['visitor_data']['u_id'] = existed_uid;
    }

    // Не отправлять информацию по ботам
    if (!(visitor['visitor_data']['common_info'] && visitor['visitor_data']['common_info'].match(/bot|Bot|meta/))) {
      $.ajax({ url: '/get_data', data: { visitor: visitor }});
    }
  };

  function shapeData(InfObj, full_info) {
    let visitor_data = {
      time_visited: new Date(),
      page_name: window.location.pathname,
      referrer: document.referrer,
    };

    if (full_info) {
      let common_info = navigator.userAgent;
      if (common_info.match(/^Mozilla\/5\.0\s/g)) {
        common_info = common_info.replace(/^Mozilla\/5\.0\s/g, '')
      };

      let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
      if (timezone.match(/Europe\//g)) {
        timezone = timezone.replace(/Europe\//g, '')
      };

      visitor_data['timezone']         = timezone;
      visitor_data['common_info']      = common_info;
      visitor_data['platform']         = navigator.platform;
      visitor_data['os']               = navigator.oscpu;
      visitor_data['browser_language'] = navigator.language;
      visitor_data['size_screen_w']    = screen.width;
      visitor_data['size_screen_h']    = screen.height;
    };

    if (InfObj) {
      visitor_data['ip']      = InfObj.ip;
      visitor_data['country'] = InfObj.country;
      visitor_data['region']  = InfObj.region;
      visitor_data['city']    = InfObj.city;
    };

    return visitor_data;
  };

  $(function(){
    deleteAllCookies();

    let result = requestData();

    processResponse(result);
  });
</script>
