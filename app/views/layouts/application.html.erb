<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title><%= t('app.tab') %></title>

    <meta name="robots" content="index, follow">
    <meta name="description" content="Персональный сайт Дмитрия Dack9 Архипова Dmitry Arkhipov personal website">
    <meta name="keywords" content="dack9, макрофотография, macro, macrophoto, photo, программист, ruby on rails, software engineer, web developer, ruby">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="Дмитрий Архипов aka Dack9">

    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_pack_tag 'application', media: 'all' %>
    <%= javascript_pack_tag 'application' %>
    <%= favicon_pack_tag 'favicon.ico' %>

    <link href="/dack9_rss" rel="alternate" title="RSS feed" type="application/rss+xml">

    <script src="https://api-maps.yandex.ru/2.1/?apikey=<%= Rails.application.credentials.dig(Rails.env.to_sym, :yandex_api_key) %>&lang=ru_RU"></script>
  </head>

  <body class='<%= @dark_body %>'%>

    <div class="content">
      <div id="collapseMenu" class="collapse d-lg-block">
        <div class="navbar navbar-expand-lg navbar-light bg-light navbar-static-top">
          <div class="container-fluid">
            <div class="navbar navbar-responsive logo_my_class">
              <%= image_pack_tag("logo.png", alt: 'logo', class: 'mt-0 logo') %>

<!-- Новогодняя шапка desktop -->
                <%#= image_pack_tag("ny.png", alt: 'Happy New Year!', class: 'ny', title: 'Happy New Year!') %>

                <ul class="navbar-nav">
                  <%= link_to t('app.navbar.logo_name'), root_path, class: 'btn bg-light', title: t('app.navbar.logo_name_caption') %>
                </ul>
            </div>
            <div class="navbar navbar-responsive d-md-block">
              <ul class="navbar-nav">
                <li class="dropdown">
                  <button type="button" class="btn dropdown-toggle drop_down_button_my my_font_size remove_padding bg-light" data-toggle="dropdown"><%= t('app.navbar.menu.drop_down.photos') %></button>
                  <div class="dropdown-menu my_control my_font_size mobile_bg_light" aria-labelledby="dropdownMenuButton">

                    <div class="dropdown-item my_dropdown_item remove_padding bg-light photos_category_item"><%= t('app.navbar.menu.drop_down.categories') %></div>
                    <% if current_user %>
                      <%=link_to t('app.navbar.menu.drop_down.all'), all_page_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                      <%=link_to t('app.navbar.menu.drop_down.photohosting'), photohosting_page_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    <% end %>

                    <%= link_to t('app.navbar.menu.drop_down.recent'), photos_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    <%= link_to t('app.navbar.menu.drop_down.macro'), macro_page_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    <%= link_to t('app.navbar.menu.drop_down.landscape'), landscape_page_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    <%= link_to t('app.navbar.menu.drop_down.portrait'), portrait_page_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    <%= link_to t('app.navbar.menu.drop_down.drone'), drone_page_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    <%= link_to t('app.navbar.menu.drop_down.collage'), collage_page_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    <%= link_to t('app.navbar.menu.drop_down.other'), other_page_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                  </div>
                </li>
                <li> <%= link_to t('app.navbar.menu.blog'), articles_path, class: "btn my_font_size remove_padding" %> </li>
                <li> <%= link_to t('app.navbar.menu.map'), map_path, class: "btn my_font_size remove_padding" %> </li>

                <li class="dropdown">
                  <button type="button" class="btn dropdown-toggle drop_down_button_my my_font_size remove_padding bg-light" data-toggle="dropdown"><%= t('app.navbar.menu.about') %></button>
                  <div class="dropdown-menu my_control my_font_size mobile_bg_light" aria-labelledby="dropdownMenuButton">

                    <div class="dropdown-item my_dropdown_item remove_padding bg-light admin_options"><%= t('app.navbar.menu.about') %></div>

                    <%= link_to t('app.navbar.menu.common_info'), about_path(About&.first&.id), class: "dropdown-item my_dropdown_item remove_padding bg-light" %>

                    <!-- Язык резюме в зависимости от локали -->
                    <%# if params[:locale] == 'ru' || params[:locale] == nil %>
                      <%#= link_to t('app.navbar.menu.cv_rus'), cv_rus_path, class: "dropdown-item my_dropdown_item remove_padding bg-light", target: "blanc", rel: "noreferrer" %>
                    <%# else %>
                      <%#= link_to t('app.navbar.menu.cv_eng'), cv_eng_path, class: "dropdown-item my_dropdown_item remove_padding bg-light", target: "blanc", rel: "noreferrer" %>
                    <%# end %>

                    <%= link_to t('app.navbar.menu.portfolio'), portfolio_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    <%= link_to t('app.navbar.menu.cv_rus'), cv_rus_path, class: "dropdown-item my_dropdown_item remove_padding bg-light", target: "blanc", rel: "noreferrer" %>
                    <%= link_to t('app.navbar.menu.cv_eng'), cv_eng_path, class: "dropdown-item my_dropdown_item remove_padding bg-light", target: "blanc", rel: "noreferrer" %>
                  </div>
                </li>

                <li> <%= link_to t('app.navbar.menu.feedback'), feedback_page_path, class: "btn my_font_size remove_padding" %> </li>

                <% if current_user %>
                  <% badge_class, badge_quantity = new_uniq_visitors %>
                  <div class='<%= badge_class %>'><%= badge_quantity %></div>

                  <li class="dropdown">
                    <button type="button" class="btn dropdown-toggle drop_down_button_my my_font_size remove_padding bg-light" data-toggle="dropdown"><%= t('app.navbar.menu.admin_options') %></button>
                    <div class="dropdown-menu my_control my_font_size mobile_bg_light" aria-labelledby="dropdownMenuButton">

                      <div class="dropdown-item my_dropdown_item remove_padding bg-light admin_options"><%= t('app.navbar.menu.admin_options') %></div>
                      <%= link_to t('app.navbar.menu.load_photo'), new_photo_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>

                      <div class="qnt_visitors_remove_l_margin">
                        <div class='<%= badge_class == "circle_badge_visible" ? "badge_class_mobile" : "circle_badge_no" %>'><%= badge_quantity %></div>
                        <%= link_to t('app.navbar.menu.visitors'), show_visitors_info_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                      </div>

                      <%= link_to t('app.navbar.menu.visits'), show_visits_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                      <%= link_to t('app.navbar.menu.chatbot'), chat_bot_topics_path, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                      <%= link_to t('app.navbar.menu.profile'), current_user, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                      <%= link_to t('app.navbar.menu.exit'), destroy_user_session_path, :method => :delete, class: "dropdown-item my_dropdown_item remove_padding bg-light" %>
                    </div>
                  </li>
                <% else %>
                  <li> <%= link_to ' ', new_user_session_path, class: "btn my_font_size remove_padding" %> </li>
                <% end %>

                <% if params[:locale] == 'ru' || params[:locale] == nil %>
                  <% locale_class_eng = '' %>
                  <% locale_class_ru = 'locale_class_na' %>
                <% else %>
                  <% locale_class_eng = 'locale_class_na' %>
                  <% locale_class_ru = '' %>
                <% end %>

                <li><%= link_to 'Рус', { controller: controller_name, action: action_name, locale: "ru" }, { class: "btn my_font_size flag_position language_sw_text #{ locale_class_ru }" } %></li>

                <li><%= link_to 'Eng', { controller: controller_name, action: action_name, locale: "en" }, { class: "btn my_font_size flag_position language_sw_text #{ locale_class_eng }" } %></li>

                <li> <%= link_to image_pack_tag("feed.png", alt: 'feed', class: 'feed_img'), dack9_rss_path, class: "btn my_font_size remove_padding" %> </li>

                <li class="nav-item "> 
                  <%= form_tag searching_path, class: "nav_margin_r", type: "search", method: :get do %>
                    <%= text_field_tag :q, params[:q], placeholder: t('app.navbar.menu.search_placeholder'), class: 'form-control searching_form' %>
                  <% end %>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      <div class="badge_mobile">
        <div class='<%= badge_class == "circle_badge_visible" ? "badge_class_mobile" : "circle_badge_no" %>'><%= badge_quantity %></div>
        <a id="menu_pic" href="#"><%= image_pack_tag("menu-4x.png", alt: 'menu') %></a>

<!-- Новогодняя шапка mobile -->
        <%#= image_pack_tag('ny.png', alt: 'Happy New Year!', class: 'ny2', title: 'Happy New Year!') %>
      </div>

      <a href="#">
        <%= image_pack_tag("close2.png", alt: 'menu', class: 'menu_close_img') %>
      </a>
    
      <% flash.each do |key, value| %>
        <div class="<%= flash_class(key) %>" role="alert">
          <%= value %>
          <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
      <% end %>

      <%= render 'layouts/chatbot' %>

      <%= yield %>

      <div id='showReturnBtn'>
        <img class='back_to_top_img' id='scrollToTop' src='/images/pictograms/back_to_top.png' alt='bubble to top button'>
      </div>
    </div>

    <footer class="footer bg-light mt-4">
      <div class='buffer-bottom center pt-2'>
        <% if params[:locale] == 'ru' || params[:locale] == nil %>
          <%= link_to "Dack9 #{ Time.now.year }", cv_rus_path, class: "remove_padding copyright", target: "blanc", rel: "noreferrer" %>
        <% else %>
          <%= link_to "Dack9 #{ Time.now.year }", cv_eng_path, class: "remove_padding copyright", target: "blanc", rel: "noreferrer" %>
        <% end %>
      </div>
    </footer>
  </body>
</html>

<script>
  function getLastDayOfMonth() {
    let currentDate = new Date();
    let lastDayDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0, 23, 59, 59);

    return lastDayDate;
  };

  function getUid() {
    let s = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    let out = Array(8).join().split(',').map(function() { return s.charAt(Math.floor(Math.random() * s.length)); }).join('');

    return out;
  };

  function deleteAllCookies() {
    if (localStorage.getItem('_rs_uniq_exp')) {
      let uniq_exp_date = localStorage.getItem('_rs_uniq_exp');

      if (Date.parse(uniq_exp_date) <= new Date()) {
        localStorage.removeItem('_rs_uniq_exp');
      };
    }
  };

  function requestData(callback) {
    $.ajax({dataType: "json", url: "https://api.db-ip.com/v2/free/self", success: 
      function(data) {
        InfObj = {
                  country: data.countryName, 
                  region: data.stateProv, 
                  city: data.city
                 };

        callback(InfObj);
      },
      error: function (jqXHR, textStatus, errorThrown) { 
        InfObj = {};

        callback(InfObj);
      }
    });
  };

  function processResponse(InfObj) {
    let visitor;

    if (!localStorage.getItem('_rs_visitor')) {
      if (!localStorage.getItem('_rs_uniq_exp')) {
        localStorage.setItem('_rs_uniq_exp', getLastDayOfMonth());
      }

      let uid = getUid();

      localStorage.setItem('_rs_visitor', uid);

      visitor = { 'uniq_visitor': true };

      visitor['visitor_data'] = shapeData(InfObj, true);

      visitor['visitor_data']['u_id'] = uid;
    }
    else if (localStorage.getItem('_rs_visitor')) {
      let existed_uid = localStorage.getItem('_rs_visitor');

      visitor = { 'repeat_visitor': true };

      visitor['visitor_data'] = shapeData(false, false);
      visitor['visitor_data']['u_id'] = existed_uid;
    }

    // Не отправлять информацию по ботам
    if (!(visitor['visitor_data']['common_info'] && visitor['visitor_data']['common_info'].match(/bot|Bot/))) {
      $.ajax({ url: '/get_data', data: { visitor: visitor }});
    }
  };

  function shapeData(InfObj, full_info) {
    let visitor_data = {
      time_visited: new Date(),
      page_name: window.location.pathname,
      referrer: document.referrer,
    };

    if (full_info) {
      let common_info = navigator.userAgent;
      if (common_info.match(/^Mozilla\/5\.0\s/g)) {
        common_info = common_info.replace(/^Mozilla\/5\.0\s/g, '')
      };

      let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
      if (timezone.match(/Europe\//g)) {
        timezone = timezone.replace(/Europe\//g, '')
      };

      visitor_data['timezone']         = timezone;
      visitor_data['common_info']      = common_info;
      visitor_data['platform']         = navigator.platform;
      visitor_data['os']               = navigator.oscpu;
      visitor_data['browser_language'] = navigator.language;
      visitor_data['size_screen_w']    = screen.width;
      visitor_data['size_screen_h']    = screen.height;
    };

    if (InfObj) {
      visitor_data['country'] = InfObj.country;
      visitor_data['region']  = InfObj.region;
      visitor_data['city']    = InfObj.city;
    };

    return visitor_data;
  };

  $(function(){
    $("#menu_pic").click(function() {
      if ($("#collapseMenu").height() > 80) {
        $("#collapseMenu").slideToggle(500);
        $("#menu_pic").hide(500);
        $(".badge_mobile").hide(200);


        if ($(".menu_close_img").is(":visible")) {
          $(".menu_close_img").hide(500)
        }
        else{
          $(".menu_close_img").slideDown(500) 
        }
      }
    });

    // Показываю\скрываю кнопку возврата
    let scroll = document.body.scrollHeight > window.innerHeight

    if (scroll) {
      $('.showReturnBtn').show()
    }
    else {
      $('.showReturnBtn').hide()
    }

    $('.scrollToTop').click(function () {
      $('html, body').animate({ scrollTop: 0 }, 300);

      return false;
    });

    $(".navbar").click(function() {
      if ($("#collapseMenu").height() > 80) {
        $("#collapseMenu").slideUp(500);
        $(".menu_close_img").slideUp(500);
        $("#menu_pic").show(500);
        $(".badge_mobile").show(100);
      }
    });

    $(".menu_close_img").click(function() {
      if ($("#collapseMenu").height() > 80) {
        $("#collapseMenu").slideUp(500);
        $(".menu_close_img").slideUp(500);
        $("#menu_pic").show(500);
        $(".badge_mobile").show(100);
      }
    });

    $('#scrollToTop').click(function () {
      $('html, body').animate({ scrollTop: $('html, body').offset().top - 100 }, 300);

      return false;
    });

    $(window).scroll(function() {
      if ($(this).scrollTop() > 0) {
        $('#showReturnBtn').fadeIn(200);
      }
      else {
        $('#showReturnBtn').fadeOut(200);
      }
    });

    deleteAllCookies();

    requestData(processResponse);
  });

  // // Happy New Year
  // // Настройки
  // var snowCount = 15;
  // var snowColor = new Array("#b9dff4", "#b9dff5", "#b9dff6", "#b9dff7", "#ffffff");
  // var snowType = new Array("Times");
  // var snowletter = "*"
  // var sinkSpeed = 0.5;
  // var snowSizeMin = 10;
  // var snowSizeMax = 40;
  // var snowLocation = 3; // 1 - по всему экрану, 2 - слева, 3 - по центру, 4 - справа

  // // Элементы для работы скрипта (здесь не стоит ничего менять)
  // var snow = new Array();
  // var marginbottom;
  // var marginright;
  // var timer;
  // var i_snow = 0;
  // var x_mv = new Array();
  // var crds = new Array();
  // var lftrght = new Array();
  // var browserinfos = navigator.userAgent;
  // var ie5 = document.all && document.getElementById && !browserinfos.match(/Opera/);
  // var ns6 = document.getElementById && !document.all;
  // var opera = browserinfos.match(/Opera/);
  // var browserok = ie5 || ns6 || opera;

  // function RandomMaker(range){
  //   return Math.floor(range * Math.random());
  // }

  // function InitSnow(){
  //   if (ie5 || opera){
  //      marginbottom = document.body.scrollHeight;
  //      marginright = document.body.clientWidth - 15;
  //   }else if (ns6){
  //      marginbottom = document.body.scrollHeight;
  //      marginright = window.innerWidth - 15;
  //   }
  //   var snowsizerange = snowSizeMax - snowSizeMin;
  //   for (i = 0; i <= snowCount; i++){
  //      crds[i] = 0;
  //      lftrght[i] = Math.random() * 15;
  //      x_mv[i] = 0.03 + Math.random() / 10;
  //      snow[i] = document.getElementById("s" + i);
  //      snow[i].style.fontFamily = snowType[RandomMaker(snowType.length)];
  //      snow[i].size = RandomMaker(snowsizerange) + snowSizeMin;
  //      snow[i].style.fontSize = snow[i].size + "px";
  //      snow[i].style.color = snowColor[RandomMaker(snowColor.length)];
  //      snow[i].style.zIndex = 1000;
  //      snow[i].sink=sinkSpeed * snow[i].size / 5;
  //      if (snowLocation == 1){
  //          snow[i].posx = RandomMaker(marginright - snow[i].size);
  //      }
  //      if (snowLocation == 2){
  //      snow[i].posx = RandomMaker(marginright / 2 - snow[i].size);
  //      }
  //      if (snowLocation == 3){
  //      snow[i].posx = RandomMaker(marginright / 2 - snow[i].size) + marginright / 4
  //      }
  //      if (snowLocation == 4){
  //      snow[i].posx = RandomMaker(marginright / 2 - snow[i].size) + marginright / 2
  //      }
  //      snow[i].posy = RandomMaker(2 * marginbottom - marginbottom - 2 * snow[i].size);
  //      snow[i].style.left = snow[i].posx + "px";
  //      snow[i].style.top = snow[i].posy + "px";
  //   }
  //   MoveSnow();
  // }

  // function MoveSnow(){
  //   for (i = 0; i <= snowCount; i++){
  //      crds[i] += x_mv[i];
  //      snow[i].posy += snow[i].sink;
  //      snow[i].style.left = snow[i].posx + lftrght[i] * Math.sin(crds[i]) + "px";
  //      snow[i].style.top = snow[i].posy + "px";
  //      if (snow[i].posy >= marginbottom - 2 * snow[i].size ||
  //          parseInt(snow[i].style.left) > (marginright - 3 * lftrght[i])){
  //          if (snowLocation == 1){
  //              snow[i].posx = RandomMaker(marginright - snow[i].size)
  //          }
  //          if (snowLocation == 2){
  //              snow[i].posx = RandomMaker(marginright / 2 - snow[i].size)
  //          }
  //          if (snowLocation == 3){
  //              snow[i].posx = RandomMaker(marginright / 2 - snow[i].size) + marginright / 4
  //          }
  //          if (snowLocation == 4){
  //              snow[i].posx = RandomMaker(marginright / 2 - snow[i].size) + marginright / 2
  //          }
  //          snow[i].posy = 0;
  //        }
  //     }
  //     var timer = setTimeout("MoveSnow()", 50);
  // }

  // for (i = 0; i <= snowCount; i++){
  //    document.write("<span id='s" + i + "' style='position:absolute;top:-" + snowSizeMax +
  //        "'>" + snowletter + "</span>");
  // }

  // if (browserok){
  //    window.onload = InitSnow;
  // }
</script>
