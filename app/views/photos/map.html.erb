<%= breadcrumbs [t('views.home.announces.header'), root_path], [t('app.navbar.menu.admin_options'), nil], [t('app.navbar.menu.map_countries'), nil] %>

<div id="map"></div>

<script>
  $(function(){
    <% if @photos_qnt > 1 %>
      const map = L.map('map', { attributionControl: true }).setView([40, 40], 3);

      map.attributionControl
        .setPrefix('')
        .addAttribution('© <a href="https://leafletjs.com">leaflet</a>')
        .addAttribution('© <a href="https://openstreetmap.org">OpenStreetMap</a> contributors');

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 18 }).addTo(map);

      const markers = L.markerClusterGroup({ maxClusterRadius: 50, disableClusteringAtZoom: 14, spiderfyOnMaxZoom: false, showCoverageOnHover: false });

      function addMarkersToMap(data) {
        data.features.forEach(feature => {
          let coords     = feature.geometry.coordinates;
          let properties = feature.properties;
          let marker     = L.marker([coords[0], coords[1]]);

          let popupContent = `
            <div class="custom-popup">
              <div style='width:100px; font-size:80%'>${ properties.hintContent }</div>
              ${ properties.photo_img }
            </div>
          `;

          marker.bindPopup(popupContent, { closeButton: true });

          markers.addLayer(marker);

          map.addLayer(markers);
        });
      }

      addMarkersToMap(<%= raw @show_marks.to_json %>);
    <% else %>
      <% lat  = @show_marks['features'].first[:geometry][:coordinates][0] %>
      <% long = @show_marks['features'].first[:geometry][:coordinates][1] %>

      const map = L.map('map', { attributionControl: true }).setView([<%= lat %>, <%= long %>], 13);

      map.attributionControl
        .setPrefix('')
        .addAttribution('© <a href="https://leafletjs.com">leaflet</a>')
        .addAttribution('© <a href="https://openstreetmap.org">OpenStreetMap</a> contributors');

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 18 }).addTo(map);

      function addMarkersToMap(data) {
        data.features.forEach(feature => {
          let coords     = feature.geometry.coordinates;
          let properties = feature.properties;
          let marker     = L.marker([coords[0], coords[1]]);

          let popupContent = `
            <div class="custom-popup">
              <div style='width:100px; font-size:80%'>${ properties.hintContent }</div>
              ${ properties.photo_img }
            </div>
          `;

          marker.bindPopup(popupContent, { closeButton: true });

          marker.addTo(map).openPopup();

          marker.addTo(map);
        });
      }

      addMarkersToMap(<%= raw @show_marks.to_json %>);
    <% end %>
  });
</script>
